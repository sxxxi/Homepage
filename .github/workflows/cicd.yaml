name: Homepage main pipeline
run-name: ci/cd

on:
  push:
    branches:
      - main
      - feature

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Setup github access key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.GH_PRIVATE_KEY }}
            ${{ secrets.AWS_PRIVATE_KEY }}
      -
        name: Pull repository 
        uses: actions/checkout@v4
      -
        name: Update and clone submodules
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.GH_PRIVATE_KEY}}" > ~/.ssh/actions-key
          sudo chmod 600 ~/.ssh/actions-key
          eval `ssh-agent -s`
          ssh-add ~/.ssh/actions-key
          git submodule update --remote --init
      -
        name: Prepare env file
        run: |
          echo "
          AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}
          " > .env
      -
        name: Build and push image to registry
        run: |
          docker compose build
          docker compose push
      -
        name: Initialize repository in deployment machine
        env:
          INSTANCE_IP: ${{secrets.INSTANCE_IP}}
          INSTANCE_HOST: ec2-user
        run: |
          echo "StrictHostKeyChecking=no" > ~/.ssh/config
          ssh $INSTANCE_HOST@$INSTANCE_IP '
            # Destroy previous deployment
            if [[ -d /home/ec2-user/home ]]; then 
              cd /home/ec2-user/home; 
              docker-compose down; 
              cd ..; 
              sudo rm -rf /home/ec2-user/home; 
            fi;
            git clone https://github.com/sxxxi/Homepage /home/ec2-user/home
          '
      - 
        name: Copy .env file and Deploy to EC2 instance
        env:
          INSTANCE_IP: ${{secrets.INSTANCE_IP}}
          INSTANCE_HOST: ec2-user
        run: |
          echo "StrictHostKeyChecking=no" > ~/.ssh/config
          sftp $INSTANCE_HOST@$INSTANCE_IP:/home/ec2-user/home <<< $'put .env'
          ssh $INSTANCE_HOST@$INSTANCE_IP '
            cd /home/ec2-user/home
            docker-compose up -d
          '